<!-- Receiver Scripts Start -->
	<script>
       // setInterval(function(){reloader();},1000);
       //
       // function reloader(){
       //     $.ajax({url: 'http://127.0.0.1:8000/getouts1', 
       //         success: function(result){
       //             var res = JSON.parse(result);
       //             document.getElementById('routerConfig').innerHTML = res['routerConfig'];              
       //         }
       //     });
		//	var textarea = document.getElementById('routerConfig');
		//	textarea.scrollTop = textarea.scrollHeight;
       // }
    </script>
	<!-- Receiver Scripts End -->
	
	<!-- Serial Sender Scripts Start -->
	<script>
		var routerInput = document.getElementById("routerInput");
		routerInput.addEventListener("keydown", function (e) {
			if (e.keyCode == 13){
				routerSend();
				}
		});
		
		function routerSend(){
			var textarea = document.getElementById('routerConfig');
			textarea.scrollTop = textarea.scrollHeight;
			
			var command = document.getElementById("routerInput").value;
			$.ajax({url: 'http://127.0.0.1:8000/routerSend?routerInput=' + command,
			});
			document.getElementById("routerInput").value = "";
			
			textarea.scrollTop = textarea.scrollHeight;
		}
	</script>
	<!-- Serial Sender Scripts End -->
	
	<!-- Save/Load Functions Start -->
	<script>
		function loadTopology(){
			var topologyID = document.getElementById('topologyID').value;
			window.location = "http://127.0.0.1:8000/loadTopology?topologyID=" + topologyID;
		}
		
		function saveTopology(){
			var topologyName = document.getElementById('saveTopologyInput').value;
			$.ajax({url: "http://127.0.0.1:8000/saveTopology?topologyName=" + topologyName,
				});
			window.setTimeout(saveDevices, 200);
			window.setTimeout(saveConnections, 200);
		}
		
		function saveDevices(){
			var deviceArrayLength = Devices.length;
			for (var ctr = 0; ctr < deviceArrayLength; ctr++) {		
				$.ajax({url: "http://127.0.0.1:8000/saveDevice?deviceName=" + Devices[ctr].name + "&x=" + Devices[ctr].x + "&y=" + Devices[ctr].y,
				});
			}
			console.log("Saved Devices")
		}
		
		function saveConnections(){
			var connectionsArrayLength = Cables.length;
			for (var ctr = 0; ctr < connectionsArrayLength; ctr++) {		
				$.ajax({url: "http://127.0.0.1:8000/saveConnection?srcDevice=" + Cables[ctr].startdevice + "&endDevice=" + Cables[ctr].enddevice + "&srcPort=" + Cables[ctr].startport + "&endPort=" + Cables[ctr].endport + "&connectionName=" + Cables[ctr].name,
				});
			}
			console.log("Saved Connections")
		}
	</script>
	<!-- Save/Load Functions End -->

	<!-- Canvass Loader -->		
	<script>
		console.log("Loaded {{ currTopology }}")
		document.getElementById("saveTopologyInput").value="{{ currTopology }}";
	</script>
	
	{% for device in loadDevices %}
	<script>
		var loaddeviceImage = new Image();
		var loaddeviceName = "{{ device.deviceName }}";
		var loaddeviceHeight;
		var loaddeviceWidth;
		var loadPosX = {{ device.xCord }};
		var loadPosY = {{ device.yCord}};
		if(loaddeviceName.includes("Router")){
			loaddeviceImage.src = "{% static '/production/images/Router.png' %}";
			loaddeviceHeight = 38;
			loaddeviceWidth = 64;
		} else if(loaddeviceName.includes("Switch")){
			loaddeviceImage.src = "{% static '/production/images/Switch.png' %}";
			loaddeviceHeight = 38;
			loaddeviceWidth = 64;
		} else if(loaddeviceName.includes("Terminal")){
			loaddeviceImage.src = "{% static '/production/images/Terminal.png' %}";
			loaddeviceHeight = 54;
			loaddeviceWidth = 62;
		}
		
		Workspace.drawImage(loaddeviceImage, loadPosX, loadPosY);
		Workspace.fillText(loaddeviceName, loadPosX + loaddeviceWidth / 2, loadPosY + loaddeviceHeight + 20);
		
		var loadedDevice = { object:loaddeviceImage, x:loadPosX, y:loadPosY, height:loaddeviceHeight, width:loaddeviceWidth, name:loaddeviceName};
		
		Devices.push(loadedDevice);
	</script>
	{% endfor %}
	
	
	{% for connection in connections %}
	<script>
		var name = "{{ connection.connectionName }}"
		var srcDevice = "{{ connection.srcDevice }}"
		var endDevice = "{{ connection.endDevice }}"
		var srcPort = "{{ connection.srcPort }}"
		var endPort = "{{ connection.endPort }}"
		var cableType = {{ cableType }}
	</script>
	{% endfor %}
	<!-- Canvass Loader End -->